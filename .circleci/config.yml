version: 2.1

setup: true

orbs:
  tools: replikativ/clj-tools@0
  continuation: circleci/continuation@0.1.2

jobs:
  setup:
    executor: tools/clojurecli
    parameters:
      setup_cljs:
        type: boolean
        default: true
    steps:
      - restore_cache:
          keys:
            - source-{{ .Branch }}-{{ .Revision }}
            - source-{{ .Branch }}
            - source-
      - checkout
      - save_cache:
          key: source-{{ .Branch }}-{{ .Revision }}
          paths:
            - .git
      - restore_cache:
          keys:
            - deps-{{ checksum "deps.edn" }}
            - deps-
      - run:
          name: resolve deps
          command: clojure -A:dev:test:build -P
      - save_cache:
          key: deps-{{ checksum "deps.edn" }}
          paths:
            - /home/circleci/.m2
      - when:
          condition: <<parameters.setup_cljs>>
          steps:
            - restore_cache:
                keys:
                  - npm-{{ checksum "package-lock.json" }}
                  - npm-
            - run: npm ci
            - save_cache:
                key: npm-{{ checksum "package-lock.json" }}
                paths:
                  - /home/circleci/.npm
      - persist_to_workspace:
          root: /home/circleci/
          paths:
            - .m2
            - .npm
            - replikativ
  format:
    executor: tools/clojurecli
    steps:
      - attach_workspace:
          at: /home/circleci
      - run:
          name: Check format
          command: bb format
          no_output_timeout: 5m
      - save_cache:
          key: deps-{{ checksum "deps.edn" }}
          paths:
            - /home/circleci/.m2
  native-image:
    executor: tools/clojurecli
    steps:
      - attach_workspace:
          at: /home/circleci
      - run:
          name: Generate config
          command: |
            bb .circleci/scripts/gen_ci.clj > generated_config.yml
      - continuation/continue:
          configuration_path: generated_config.yml
      - save_cache:
          key: deps-{{ checksum "deps.edn" }}
          paths:
            - /home/circleci/.m2
  persistent-set-test:
    executor: tools/clojurecli
    steps:
      - attach_workspace:
          at: /home/circleci
      - run:
          name: Run unittests for persistent sorted set index
          command: bb test clj-pss
          no_output_timeout: 5m
      - save_cache:
          key: deps-{{ checksum "deps.edn" }}
          paths:
            - /home/circleci/.m2
  hitchhiker-tree-test:
    executor: tools/clojurecli
    steps:
      - attach_workspace:
          at: /home/circleci
      - run:
          name: Run unittests for hitchhiker-tree index
          command: bb test clj-hht
          no_output_timeout: 5m
      - save_cache:
          key: deps-{{ checksum "deps.edn" }}
          paths:
            - /home/circleci/.m2
  spec-test:
    executor: tools/clojurecli
    steps:
      - attach_workspace:
          at: /home/circleci
      - run:
          name: Run unittests for hitchhiker-tree index
          command: bb test specs
          no_output_timeout: 5m
      - save_cache:
          key: deps-{{ checksum "deps.edn" }}
          paths:
            - /home/circleci/.m2
  backward-compatibility-test:
    executor: tools/clojurecli
    steps:
      - attach_workspace:
          at: /home/circleci
      - run:
          name: Retrieve ssh-fingerprints
          command: mkdir ~/.ssh && ssh-keyscan github.com >> ~/.ssh/known_hosts
          no_output_timeout: 1m
      - run:
          name: Run backward compatibility test
          command: bb test back-compat
          no_output_timeout: 5m
      - save_cache:
          key: deps-{{ checksum "deps.edn" }}
          paths:
            - /home/circleci/.m2
  integration-test:
    executor: tools/clojurecli
    steps:
      - attach_workspace:
          at: /home/circleci
      - run:
          name: Run integration test
          command: bb test integration
          no_output_timeout: 5m
      - save_cache:
          key: deps-{{ checksum "deps.edn" }}
          paths:
            - /home/circleci/.m2
  build:
    executor: tools/clojurecli
    steps:
      - attach_workspace:
          at: /home/circleci
      - run:
          name: Build jar
          command: bb jar
      - persist_to_workspace:
          root: /home/circleci/
          paths:
            - .m2
            - .npm
            - replikativ
  deploy:
    executor: tools/clojurecli
    steps:
      - attach_workspace:
          at: /home/circleci
      - run:
          name: Deploy to clojars
          command: bb clojars
  release-jar:
    executor: tools/clojurecli
    steps:
      - attach_workspace:
          at: /home/circleci
      - run:
          name: Release jar on GitHub
          command: bb release jar

workflows:
  build-test-and-deploy:
    jobs:
      - setup:
          context: dockerhub-deploy
          setup_cljs: false
      - build:
          context: dockerhub-deploy
          requires:
            - setup
      - native-image:
          context:
            - dockerhub-deploy
            - github-token
          requires:
            - setup
      - format:
          context: dockerhub-deploy
          requires:
            - setup
      - persistent-set-test:
          context: dockerhub-deploy
          requires:
            - build
      - hitchhiker-tree-test:
          context: dockerhub-deploy
          requires:
            - build
      - backward-compatibility-test:
          context: dockerhub-deploy
          requires:
            - build
      - integration-test:
          context: dockerhub-deploy
          requires:
            - build
      - deploy:
          context:
            - dockerhub-deploy
            - clojars-deploy
            - github-token
          filters:
            branches:
              only: main
          requires:
            - format
            - persistent-set-test
            - hitchhiker-tree-test
            - backward-compatibility-test
            - integration-test
      - release-jar:
          context:
            - dockerhub-deploy
            - github-token
          filters:
            branches:
              only: main
          requires:
            - format
            - persistent-set-test
            - hitchhiker-tree-test
            - backward-compatibility-test
            - integration-test
