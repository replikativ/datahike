
version: 2.1

orbs:
  github-cli: circleci/github-cli@1.0
  tools: replikativ/clj-tools@0

jobs:
  setup:
    executor: tools/clojurecli
    parameters:
      setup_cljs:
        type: boolean
        default: true
    steps:
      - restore_cache:
          keys:
            - source-{{ .Branch }}-{{ .Revision }}
            - source-{{ .Branch }}
            - source-
      - checkout
      - save_cache:
          key: source-{{ .Branch }}-{{ .Revision }}
          paths:
            - .git
      - restore_cache:
          keys:
            - deps-{{ checksum "deps.edn" }}
            - deps-
      - run:
          name: resolve deps
          command: clojure -A:dev:test:build -P
      - save_cache:
          key: deps-{{ checksum "deps.edn" }}
          paths:
            - /home/circleci/.m2
      - when:
          condition: <<parameters.setup_cljs>>
          steps:
            - restore_cache:
                keys:
                  - npm-{{ checksum "package-lock.json" }}
                  - npm-
            - run: npm ci
            - save_cache:
                key: npm-{{ checksum "package-lock.json" }}
                paths:
                  - /home/circleci/.npm
      - persist_to_workspace:
          root: /home/circleci/
          paths:
            - .m2
            - .npm
            - replikativ
  build:
    executor: tools/clojurecli
    steps:
      - attach_workspace:
          at: /home/circleci
      - run:
          name: clean
          command: clojure -T:build clean
      - run:
          name: compile
          command: clojure -T:build compile
      - run:
          name: jar
          command: clojure -T:build jar
      - persist_to_workspace:
          root: /home/circleci/
          paths:
            - .m2
            - .npm
            - replikativ
  native-image:
    machine:
      image: ubuntu-2004:202010-01
      resource_class: large
    steps:
      - attach_workspace:
          at: /home/circleci
      - run:
          name: install graalvm
          command: |
            cd /home/circleci
            wget https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-22.2.0/graalvm-ce-java17-linux-amd64-22.2.0.tar.gz
            tar -xzf graalvm-ce-java17-linux-amd64-22.2.0.tar.gz
            export PATH=/home/circleci/graalvm-ce-java17-22.2.0/bin:$PATH
            export JAVA_HOME=/home/circleci/graalvm-ce-java17-22.2.0/
            gu install native-image
      - run:
          name: install clojure
          command: |
            cd /home/circleci
            curl -O https://download.clojure.org/install/linux-install-1.11.1.1165.sh
            chmod +x linux-install-1.11.1.1165.sh
            ./linux-install-1.11.1.1165.sh --prefix /home/circleci/clojure
      - run:
          name: build native-image
          command: |
            cd /home/circleci/replikativ
            export PATH=/home/circleci/graalvm-ce-java17-22.2.0/bin:/home/circleci/clojure/bin:$PATH
            export JAVA_HOME=/home/circleci/graalvm-ce-java17-22.2.0/
            ./bin/build-native-image
      - persist_to_workspace:
          root: /home/circleci/
          paths:
            - replikativ/dhi
  native-image-test:
    executor: tools/clojurecli
    steps:
      - attach_workspace:
          at: /home/circleci
      - run:
          name: Run native-image test
          command: |
            cd /home/circleci/replikativ
            ./bin/run-native-image-tests
          no_output_timeout: 5m
  backward-compatibility-test:
    executor: tools/clojurecli
    steps:
      - attach_workspace:
          at: /home/circleci
      - run:
          name: Retrieve ssh-fingerprints
          command: mkdir ~/.ssh && ssh-keyscan github.com >> ~/.ssh/known_hosts
          no_output_timeout: 1m
      - run:
          name: Run Unittests
          command: ./bin/run-backward-compatibility-tests
          no_output_timeout: 5m
      - save_cache:
          key: deps-{{ checksum "deps.edn" }}
          paths:
            - /home/circleci/.m2
  deploy:
    executor: tools/clojurecli
    steps:
      - attach_workspace:
          at: /home/circleci
      - run:
          name: deploy
          command: clojure -T:build deploy

workflows:
  build-test-and-deploy:
    jobs:
      - setup:
          context: dockerhub-deploy
          setup_cljs: false
      - build:
          context: dockerhub-deploy
          requires:
            - setup
      - native-image:
          context: dockerhub-deploy
          requires:
            - setup
      - tools/format:
          context: dockerhub-deploy
          requires:
            - setup
      - tools/unittest:
          context: dockerhub-deploy
          requires:
            - build
            - native-image
      - native-image-test:
          context: dockerhub-deploy
          requires:
            - build
            - native-image
      - backward-compatibility-test:
          context: dockerhub-deploy
          requires:
            - build
            - native-image
      - tools/integrationtest:
          context: dockerhub-deploy
          requires:
            - build
            - native-image
      - deploy:
          context:
            - dockerhub-deploy
            - clojars-deploy
            - github-token
          filters:
            branches:
              only: main
          requires:
            - tools/format
            - tools/unittest
            - backward-compatibility-test
            - native-image-test
            - tools/integrationtest
      - tools/release:
          context:
            - dockerhub-deploy
            - github-token
          filters:
            branches:
              only: main
          requires:
            - deploy
